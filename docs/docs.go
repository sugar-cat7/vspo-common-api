// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/channels": {
            "get": {
                "description": "Retrieves all channels based on provided IDs.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Channels",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-separated list of channel IDs",
                        "name": "ids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChannelsResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates channels by fetching from Youtube using provided Channel IDs.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Channels from Youtube",
                "parameters": [
                    {
                        "description": "Array of Channel IDs",
                        "name": "channelIds",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Channels updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates channels by fetching from Youtube using provided Channel IDs.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Channels from Youtube",
                "parameters": [
                    {
                        "description": "Array of Channel IDs",
                        "name": "channelIds",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Channels created successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/songs": {
            "get": {
                "description": "Retrieve all songs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get all songs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.VideosResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update songs based on provided cronType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update songs from Youtube",
                "parameters": [
                    {
                        "description": "Type of the cron",
                        "name": "cronType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Songs updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Updates songs by fetching from Youtube using provided Video IDs.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Song from Youtube",
                "parameters": [
                    {
                        "description": "Array of Video IDs",
                        "name": "videoIds",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Songs updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.ChannelsResponse": {
            "type": "object",
            "properties": {
                "channels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mappers.ChannelResponse"
                    }
                }
            }
        },
        "handlers.VideosResponse": {
            "type": "object",
            "properties": {
                "videos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mappers.VideoResponse"
                    }
                }
            }
        },
        "mappers.ChannelResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "UCiMG6VdScBabPhJ1ZtaVmbw"
                },
                "snippet": {
                    "$ref": "#/definitions/mappers.ChannelSnippetResponse"
                },
                "statistics": {
                    "$ref": "#/definitions/mappers.ChannelStatisticsResponse"
                }
            }
        },
        "mappers.ChannelSnippetResponse": {
            "type": "object",
            "properties": {
                "customUrl": {
                    "type": "string",
                    "example": "@nazunakaga"
                },
                "description": {
                    "type": "string",
                    "example": "ぶいすぽ所属　最年少！５歳可愛い担当花芽なずなです♡\n\n好きなゲームはFPS全般！"
                },
                "publishedAt": {
                    "type": "string",
                    "example": "2018-09-20T11:41:24Z"
                },
                "thumbnails": {
                    "$ref": "#/definitions/mappers.ThumbnailsResponse"
                },
                "title": {
                    "type": "string",
                    "example": "花芽なずな / Nazuna Kaga"
                }
            }
        },
        "mappers.ChannelStatisticsResponse": {
            "type": "object",
            "properties": {
                "hiddenSubscriberCount": {
                    "type": "boolean",
                    "example": false
                },
                "subscriberCount": {
                    "type": "string",
                    "example": "357000"
                },
                "videoCount": {
                    "type": "string",
                    "example": "1183"
                },
                "viewCount": {
                    "type": "string",
                    "example": "59373115"
                }
            }
        },
        "mappers.ThumbnailResponse": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "integer",
                    "example": 90
                },
                "url": {
                    "type": "string",
                    "example": "https://i.ytimg.com/vi/Qh6aSTTkmEs/default.jpg"
                },
                "width": {
                    "type": "integer",
                    "example": 120
                }
            }
        },
        "mappers.ThumbnailsResponse": {
            "type": "object",
            "properties": {
                "default": {
                    "$ref": "#/definitions/mappers.ThumbnailResponse"
                },
                "high": {
                    "$ref": "#/definitions/mappers.ThumbnailResponse"
                },
                "maxres": {
                    "$ref": "#/definitions/mappers.ThumbnailResponse"
                },
                "medium": {
                    "$ref": "#/definitions/mappers.ThumbnailResponse"
                },
                "standard": {
                    "$ref": "#/definitions/mappers.ThumbnailResponse"
                }
            }
        },
        "mappers.VideoResponse": {
            "type": "object",
            "properties": {
                "channelId": {
                    "type": "string",
                    "example": "UCiMG6VdScBabPhJ1ZtaVmbw"
                },
                "channelTitle": {
                    "type": "string",
                    "example": "花芽なずな / Nazuna Kaga"
                },
                "description": {
                    "type": "string",
                    "example": ""
                },
                "id": {
                    "type": "string",
                    "example": "Qh6aSTTkmEs"
                },
                "publishedAt": {
                    "type": "string",
                    "example": "2020-12-31T12:34:56+09:00"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[ぶいすぽっ！",
                        " 歌ってみた]"
                    ]
                },
                "thumbnails": {
                    "$ref": "#/definitions/mappers.ThumbnailsResponse"
                },
                "title": {
                    "type": "string",
                    "example": "【ぶいすぽっ！】Blessing ~12人で歌ってみた~"
                },
                "viewCount": {
                    "$ref": "#/definitions/mappers.ViewsResponse"
                }
            }
        },
        "mappers.ViewsResponse": {
            "type": "object",
            "properties": {
                "daily": {
                    "type": "string",
                    "example": "1000"
                },
                "monthly": {
                    "type": "string",
                    "example": "100000"
                },
                "total": {
                    "type": "string",
                    "example": "1000000"
                },
                "weekly": {
                    "type": "string",
                    "example": "10000"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "VSPO Common API",
	Description:      "This is the API documentation for VSPO Common services.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
