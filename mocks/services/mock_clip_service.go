// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/sugar-cat7/vspo-common-api/domain/services (interfaces: ClipService)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entities "github.com/sugar-cat7/vspo-common-api/domain/entities/legacy"
)

// MockClipService is a mock of ClipService interface.
type MockClipService struct {
	ctrl     *gomock.Controller
	recorder *MockClipServiceMockRecorder
}

// MockClipServiceMockRecorder is the mock recorder for MockClipService.
type MockClipServiceMockRecorder struct {
	mock *MockClipService
}

// NewMockClipService creates a new mock instance.
func NewMockClipService(ctrl *gomock.Controller) *MockClipService {
	mock := &MockClipService{ctrl: ctrl}
	mock.recorder = &MockClipServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClipService) EXPECT() *MockClipServiceMockRecorder {
	return m.recorder
}

// CreateClipsInBatch mocks base method.
func (m *MockClipService) CreateClipsInBatch(arg0 []*entities.Clip) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateClipsInBatch", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateClipsInBatch indicates an expected call of CreateClipsInBatch.
func (mr *MockClipServiceMockRecorder) CreateClipsInBatch(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateClipsInBatch", reflect.TypeOf((*MockClipService)(nil).CreateClipsInBatch), arg0)
}

// FindAllByPeriod mocks base method.
func (m *MockClipService) FindAllByPeriod(arg0, arg1 string) ([]*entities.Clip, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAllByPeriod", arg0, arg1)
	ret0, _ := ret[0].([]*entities.Clip)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindAllByPeriod indicates an expected call of FindAllByPeriod.
func (mr *MockClipServiceMockRecorder) FindAllByPeriod(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAllByPeriod", reflect.TypeOf((*MockClipService)(nil).FindAllByPeriod), arg0, arg1)
}

// UpdateClipsInBatch mocks base method.
func (m *MockClipService) UpdateClipsInBatch(arg0 []*entities.Clip) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateClipsInBatch", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateClipsInBatch indicates an expected call of UpdateClipsInBatch.
func (mr *MockClipServiceMockRecorder) UpdateClipsInBatch(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateClipsInBatch", reflect.TypeOf((*MockClipService)(nil).UpdateClipsInBatch), arg0)
}
