// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/sugar-cat7/vspo-common-api/domain/ports (interfaces: YouTubeService)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	youtube "google.golang.org/api/youtube/v3"
)

// MockYouTubeService is a mock of YouTubeService interface.
type MockYouTubeService struct {
	ctrl     *gomock.Controller
	recorder *MockYouTubeServiceMockRecorder
}

// MockYouTubeServiceMockRecorder is the mock recorder for MockYouTubeService.
type MockYouTubeServiceMockRecorder struct {
	mock *MockYouTubeService
}

// NewMockYouTubeService creates a new mock instance.
func NewMockYouTubeService(ctrl *gomock.Controller) *MockYouTubeService {
	mock := &MockYouTubeService{ctrl: ctrl}
	mock.recorder = &MockYouTubeServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockYouTubeService) EXPECT() *MockYouTubeServiceMockRecorder {
	return m.recorder
}

// GetChannels mocks base method.
func (m *MockYouTubeService) GetChannels(arg0 []string) ([]*youtube.Channel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetChannels", arg0)
	ret0, _ := ret[0].([]*youtube.Channel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetChannels indicates an expected call of GetChannels.
func (mr *MockYouTubeServiceMockRecorder) GetChannels(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetChannels", reflect.TypeOf((*MockYouTubeService)(nil).GetChannels), arg0)
}

// GetPlaylists mocks base method.
func (m *MockYouTubeService) GetPlaylists(arg0 []string) ([]*youtube.PlaylistItemContentDetails, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPlaylists", arg0)
	ret0, _ := ret[0].([]*youtube.PlaylistItemContentDetails)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPlaylists indicates an expected call of GetPlaylists.
func (mr *MockYouTubeServiceMockRecorder) GetPlaylists(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPlaylists", reflect.TypeOf((*MockYouTubeService)(nil).GetPlaylists), arg0)
}

// GetVideos mocks base method.
func (m *MockYouTubeService) GetVideos(arg0 []string) ([]*youtube.Video, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVideos", arg0)
	ret0, _ := ret[0].([]*youtube.Video)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVideos indicates an expected call of GetVideos.
func (mr *MockYouTubeServiceMockRecorder) GetVideos(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVideos", reflect.TypeOf((*MockYouTubeService)(nil).GetVideos), arg0)
}
