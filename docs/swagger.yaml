basePath: /api/v1
definitions:
  github_com_sugar-cat7_vspo-common-api_infrastructure_http_handlers_clip.VideosResponse:
    properties:
      videos:
        items:
          $ref: '#/definitions/mappers.VideoResponse'
        type: array
    type: object
  github_com_sugar-cat7_vspo-common-api_infrastructure_http_handlers_song.VideosResponse:
    properties:
      videos:
        items:
          $ref: '#/definitions/mappers.VideoResponse'
        type: array
    type: object
  handlers.ChannelsResponse:
    properties:
      channels:
        items:
          $ref: '#/definitions/mappers.ChannelResponse'
        type: array
    type: object
  mappers.ChannelResponse:
    properties:
      id:
        example: UCiMG6VdScBabPhJ1ZtaVmbw
        type: string
      snippet:
        $ref: '#/definitions/mappers.ChannelSnippetResponse'
      statistics:
        $ref: '#/definitions/mappers.ChannelStatisticsResponse'
    type: object
  mappers.ChannelSnippetResponse:
    properties:
      customUrl:
        example: '@nazunakaga'
        type: string
      description:
        example: |-
          ぶいすぽ所属　最年少！５歳可愛い担当花芽なずなです♡

          好きなゲームはFPS全般！
        type: string
      publishedAt:
        example: "2018-09-20T11:41:24Z"
        type: string
      thumbnails:
        $ref: '#/definitions/mappers.ThumbnailsResponse'
      title:
        example: 花芽なずな / Nazuna Kaga
        type: string
    type: object
  mappers.ChannelStatisticsResponse:
    properties:
      hiddenSubscriberCount:
        example: false
        type: boolean
      subscriberCount:
        example: "357000"
        type: string
      videoCount:
        example: "1183"
        type: string
      viewCount:
        example: "59373115"
        type: string
    type: object
  mappers.ThumbnailResponse:
    properties:
      height:
        example: 90
        type: integer
      url:
        example: https://i.ytimg.com/vi/Qh6aSTTkmEs/default.jpg
        type: string
      width:
        example: 120
        type: integer
    type: object
  mappers.ThumbnailsResponse:
    properties:
      default:
        $ref: '#/definitions/mappers.ThumbnailResponse'
      high:
        $ref: '#/definitions/mappers.ThumbnailResponse'
      maxres:
        $ref: '#/definitions/mappers.ThumbnailResponse'
      medium:
        $ref: '#/definitions/mappers.ThumbnailResponse'
      standard:
        $ref: '#/definitions/mappers.ThumbnailResponse'
    type: object
  mappers.VideoResponse:
    properties:
      channelId:
        example: UCiMG6VdScBabPhJ1ZtaVmbw
        type: string
      channelTitle:
        example: 花芽なずな / Nazuna Kaga
        type: string
      description:
        example: ""
        type: string
      id:
        example: Qh6aSTTkmEs
        type: string
      publishedAt:
        example: "2020-12-31T12:34:56+09:00"
        type: string
      tags:
        example:
        - '[ぶいすぽっ！'
        - ' 歌ってみた]'
        items:
          type: string
        type: array
      thumbnails:
        $ref: '#/definitions/mappers.ThumbnailsResponse'
      title:
        example: 【ぶいすぽっ！】Blessing ~12人で歌ってみた~
        type: string
      viewCount:
        $ref: '#/definitions/mappers.ViewsResponse'
    type: object
  mappers.ViewsResponse:
    properties:
      daily:
        example: "1000"
        type: string
      monthly:
        example: "100000"
        type: string
      total:
        example: "1000000"
        type: string
      weekly:
        example: "10000"
        type: string
    type: object
info:
  contact: {}
  description: This is the API documentation for VSPO Common services.
  title: VSPO Common API
  version: "1.0"
paths:
  /channels:
    get:
      consumes:
      - application/json
      description: Retrieves all channels based on provided IDs.
      parameters:
      - collectionFormat: csv
        description: Comma-separated list of channel IDs
        in: query
        items:
          type: string
        name: ids
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ChannelsResponse'
      summary: Get Channels
    post:
      consumes:
      - application/json
      description: Creates channels by fetching from Youtube using provided Channel
        IDs.
      parameters:
      - description: Array of Channel IDs
        in: body
        name: channelIds
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Channels created successfully
          schema:
            type: string
      summary: Create Channels from Youtube
    put:
      consumes:
      - application/json
      description: Updates channels by fetching from Youtube using provided Channel
        IDs.
      parameters:
      - description: Array of Channel IDs
        in: body
        name: channelIds
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Channels updated successfully
          schema:
            type: string
      summary: Update Channels from Youtube
  /clips:
    get:
      consumes:
      - application/json
      description: Retrieve all clips
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_sugar-cat7_vspo-common-api_infrastructure_http_handlers_clip.VideosResponse'
      summary: Get all clips
  /songs:
    get:
      consumes:
      - application/json
      description: Retrieve all songs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_sugar-cat7_vspo-common-api_infrastructure_http_handlers_song.VideosResponse'
      summary: Get all songs
    post:
      consumes:
      - application/json
      description: Updates songs by fetching from Youtube using provided Video IDs.
      parameters:
      - description: Array of Video IDs
        in: body
        name: videoIds
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Songs updated successfully
          schema:
            type: string
      summary: Create Song from Youtube
    put:
      consumes:
      - application/json
      description: Update songs based on provided cronType
      parameters:
      - description: Type of the cron
        in: body
        name: cronType
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Songs updated successfully
          schema:
            type: string
      summary: Update songs from Youtube
swagger: "2.0"
