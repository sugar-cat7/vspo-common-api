// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/sugar-cat7/vspo-common-api/domain/repositories (interfaces: ClipRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entities "github.com/sugar-cat7/vspo-common-api/domain/entities/legacy"
)

// MockClipRepository is a mock of ClipRepository interface.
type MockClipRepository struct {
	ctrl     *gomock.Controller
	recorder *MockClipRepositoryMockRecorder
}

// MockClipRepositoryMockRecorder is the mock recorder for MockClipRepository.
type MockClipRepositoryMockRecorder struct {
	mock *MockClipRepository
}

// NewMockClipRepository creates a new mock instance.
func NewMockClipRepository(ctrl *gomock.Controller) *MockClipRepository {
	mock := &MockClipRepository{ctrl: ctrl}
	mock.recorder = &MockClipRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClipRepository) EXPECT() *MockClipRepositoryMockRecorder {
	return m.recorder
}

// CreateInBatch mocks base method.
func (m *MockClipRepository) CreateInBatch(arg0 []*entities.OldVideo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateInBatch", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateInBatch indicates an expected call of CreateInBatch.
func (mr *MockClipRepositoryMockRecorder) CreateInBatch(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInBatch", reflect.TypeOf((*MockClipRepository)(nil).CreateInBatch), arg0)
}

// FindAllByPeriod mocks base method.
func (m *MockClipRepository) FindAllByPeriod(arg0, arg1 string) ([]*entities.OldVideo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAllByPeriod", arg0, arg1)
	ret0, _ := ret[0].([]*entities.OldVideo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindAllByPeriod indicates an expected call of FindAllByPeriod.
func (mr *MockClipRepositoryMockRecorder) FindAllByPeriod(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAllByPeriod", reflect.TypeOf((*MockClipRepository)(nil).FindAllByPeriod), arg0, arg1)
}

// UpdateInBatch mocks base method.
func (m *MockClipRepository) UpdateInBatch(arg0 []*entities.OldVideo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateInBatch", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateInBatch indicates an expected call of UpdateInBatch.
func (mr *MockClipRepositoryMockRecorder) UpdateInBatch(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateInBatch", reflect.TypeOf((*MockClipRepository)(nil).UpdateInBatch), arg0)
}
